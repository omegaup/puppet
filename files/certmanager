#!/bin/bash -e

C=MX
CA_NAME=
HOSTNAME=()
OUTPUT=
CERT_OUTPUT=
ROOT=ssl

usage() {
	echo "$0 <command> [options]"
	echo -e "Commands:"
	echo -e "\tinit\tInitializes the certificate authority."
	echo -e "\tWhere [options] are one or more of:"
	echo -e "\t\t--root\tSets the path where the ca.crt and ca.seq files are stored. Default = ssl"
	echo -e "\t\t--ca-name\t(Required) Sets the Certificate Authority name"
	echo -e "\tcert\tCreates a certificate."
	echo -e "\tWhere [options] are one or more of:"
	echo -e "\t\t--root\tSets the path where the ca.crt and ca.seq files are stored. Default = ssl"
	echo -e "\t\t--country\tSets the country. Default = MX"
	echo -e "\t\t--hostname\t(Required) Sets the hostname of the cert. Can be specified multiple times."
	echo -e "\t\t--output\t(Required) Sets the output of the key file"
	echo -e "\t\t--cert-output\tSets the output of the cert file"

	exit 1
}

gen_cert() {
	local target="$1"
	shift
	local cert_target="$1"
	shift
	local server_names=("$@")
	local common_name="${server_names[0]}"
	local dir=`mktemp -d certmanager.XXXXXXXXXX`

	if [[ -n "${target}" && -f "${target}" ]]; then
		rm "${target}"
	fi
	if [[ -n "${cert_target}" && -f "${cert_target}" ]]; then
		rm "${cert_target}"
	fi

	/usr/bin/openssl ecparam -name prime256v1 -genkey -noout -out "${dir}/cert.key"
	local subject_alt_names=""
	for index in "${!server_names[@]}"; do
		local server_name="${server_names[index]}"
		if [[ "${server_name}" =~ ^[0-9]+(\.[0-9]+){3}$ ]]; then
			subject_alt_names="${subject_alt_names}IP.${index}=${server_name}
"
		else
			subject_alt_names="${subject_alt_names}DNS.${index}=${server_name}
"
		fi
	done

	/usr/bin/openssl req -new -key "${dir}/cert.key" -out "${dir}/cert.csr" \
		-config <(
cat <<EOF
[req]
prompt=no
default_md=sha256
req_extensions=req_ext
distinguished_name=dn
[dn]
C=${C}
CN=${common_name}
[req_ext]
subjectAltName=@alt_names
[alt_names]
${subject_alt_names}
EOF
	)

	/usr/bin/openssl x509 -req -days 3650 -in "${dir}/cert.csr" \
		-CA "${ROOT}/ca.crt" -CAcreateserial -CAkey "${ROOT}/ca.key" \
		-out "${dir}/cert.crt" -extensions req_ext -extfile <(
cat <<EOF
[req_ext]
subjectAltName=@alt_names
[alt_names]
${subject_alt_names}
EOF
	)

	if [ -n "${cert_target}" ]; then
		cp "${dir}/cert.key" "${target}"
		cat "${dir}/cert.crt" "${ROOT}/ca.crt" > "${cert_target}"
	else
		cat "${dir}/cert.key" "${dir}/cert.crt" "${ROOT}/ca.crt" > "${target}"
	fi

	local serial=`openssl x509 -in "${dir}/cert.crt" -noout -serial | \
		sed -e 's/serial=//'`

	cp "${dir}/cert.key" "${ROOT}/${common_name}-${serial}.key"
	cp "${dir}/cert.crt" "${ROOT}/${common_name}-${serial}.crt"

	rm -rf "${dir}"
}

gen_ca() {
	local common_name="$1"

	if [ -d "${ROOT}" ]; then
		rm -rf ${ROOT}/*
	fi

	mkdir -p "${ROOT}"
	/usr/bin/openssl ecparam -name prime256v1 -genkey -noout -out "${ROOT}/ca.key"
	/usr/bin/openssl req -new -sha256 -subj "/C=${C}/CN=${common_name}" -x509 -days 3560 \
		-key "${ROOT}/ca.key" -out "${ROOT}/ca.crt"
}

COMMAND=$1
shift || usage

while [[ $# > 1 ]]; do
	KEY=$1
	shift

	case $KEY in
		-c|--ca-name)
			CA_NAME="$1"
			shift || usage
			;;
		-C|--country)
			C="$1"
			shift || usage
			;;
		-h|--hostname)
			HOSTNAME+=("$1")
			shift || usage
			;;
		-o|--output)
			OUTPUT="$1"
			shift || usage
			;;
		--cert-output)
			CERT_OUTPUT="$1"
			shift || usage
			;;
		-r|--root)
			ROOT="$1"
			shift || usage
			;;
		*)
			usage
			;;
	esac
done

case "${COMMAND}" in
	init)
		if [ "${CA_NAME}" == "" ]; then
			usage
		fi
		gen_ca "${CA_NAME}"
		;;
	cert)
		if [ \( "${#HOSTNAME[@]}" == "" \) -o \( "${OUTPUT}" == "" \) ] ; then
			usage
		fi
		gen_cert "${OUTPUT}" "${CERT_OUTPUT}" "${HOSTNAME[@]}"
		;;
	*)
		usage
		;;
esac
